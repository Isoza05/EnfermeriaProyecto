@model EnfermeriaProyectoFinal.ViewModels.GestionDiaViewModel
@{
    ViewData["Title"] = "Gestión de Disponibilidad de Citas";
}

<div class="container">
    <h1 class="my-4">@ViewData["Title"]</h1>

    <!-- ÁREA DE FILTRO -->
    <div class="row mb-4 align-items-end">
        <div class="col-md-4">
            <form asp-controller="GestionDisponibilidad" asp-action="Index" method="get">
                <div class="form-group">
                    <label asp-for="FechaSeleccionada" class="control-label"></label>
                    <input asp-for="FechaSeleccionada" type="date" class="form-control" onchange="this.form.submit()" />
                </div>
            </form>
        </div>
        <div class="col-md-8">
            <h4>
                Total de Citas Activas para el @Model.FechaSeleccionada.ToShortDateString():
                <span id="total-citas-badge" class="badge bg-success">@Model.TotalCitasActivas</span>
            </h4>
        </div>
    </div>

    <!-- ÁREA DE LA TABLA DE HORARIOS -->
    <div id="tabla-horarios">
        @if (Model.EsFinDeSemana)
        {
            <div class="alert alert-warning text-center" role="alert">
                <h4>Día no laboral</h4>
                <p>No se pueden gestionar citas para fines de semana. Por favor, seleccione un día de Lunes a Viernes.</p>
            </div>
        }
        else if (!Model.HorasDelDia.Any())
        {
            <div class="alert alert-info text-center" role="alert">
                <p>No hay horarios configurados para este día.</p>
            </div>
        }
        else
        {
            <form id="form-gestion-citas">
                <table class="table table-hover align-middle">
                    <thead class="table-light">
                        <tr>
                            <th style="width: 25%;">Hora</th>
                            <th style="width: 45%;" class="text-center">Citas Disponibles</th>
                            <th style="width: 30%;">Estado</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var hora in Model.HorasDelDia)
                        {
                            <tr class="item-horario" data-horario-id="@hora.IdHorario">
                                <td><h5 class="mb-0">@hora.Hora</h5></td>
                                <td class="text-center">
                                    <div class="input-group justify-content-center" style="max-width: 150px; margin: auto;">
                                        <button class="btn btn-outline-secondary btn-restar" type="button">-</button>
                                        <input type="text" class="form-control text-center cantidad-citas" value="@hora.CantidadCitasProgramadas" readonly>
                                        <button class="btn btn-outline-secondary btn-sumar" type="button">+</button>
                                    </div>
                                </td>
                                <td>
                                    @if (hora.Estado == "Activo")
                                    {
                                        <span class="badge bg-success estado-texto fs-6">Activo</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger estado-texto fs-6">Cancelado</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </form>
        }
    </div>

    <!-- BOTÓN DE GUARDAR CAMBIOS -->
    <div class="mt-5 text-center">
        <button id="btnGuardarCambios" class="btn btn-primary btn-lg" @(Model.EsFinDeSemana ? "disabled" : "")>
            Guardar Cambios
        </button>
        <div id="mensaje-guardado" class="mt-3"></div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            function actualizarEstado(filaHorario) {
                var inputCantidad = filaHorario.find('.cantidad-citas');
                var cantidad = parseInt(inputCantidad.val());
                var spanEstado = filaHorario.find('.estado-texto');
                if (cantidad > 0) {
                    spanEstado.text('Activo').removeClass('bg-danger').addClass('bg-success');
                } else {
                    spanEstado.text('Cancelado').removeClass('bg-success').addClass('bg-danger');
                }
            }
            $('#tabla-horarios').on('click', '.btn-sumar', function () {
                var input = $(this).siblings('.cantidad-citas');
                var cantidadActual = parseInt(input.val());
                input.val(cantidadActual + 1);
                actualizarEstado($(this).closest('.item-horario'));
            });
            $('#tabla-horarios').on('click', '.btn-restar', function () {
                var input = $(this).siblings('.cantidad-citas');
                var cantidadActual = parseInt(input.val());
                if (cantidadActual > 0) {
                    input.val(cantidadActual - 1);
                }
                actualizarEstado($(this).closest('.item-horario'));
            });
            $('#btnGuardarCambios').on('click', function() {
                var datosParaGuardar = [];
                $('.item-horario').each(function() {
                    var fila = $(this);
                    var horario = {
                        HorarioId: fila.data('horario-id'),
                        Cantidad: parseInt(fila.find('.cantidad-citas').val())
                    };
                    datosParaGuardar.push(horario);
                });
                var boton = $(this);
                var divMensaje = $('#mensaje-guardado');
                boton.prop('disabled', true).text('Guardando...');
                divMensaje.empty();
                       // ... esto está dentro del evento de click del botón ...

        $.ajax({
            url: '@Url.Action("GuardarCambios", "GestionDisponibilidad")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(datosParaGuardar),

            // ================== INICIO DEL BLOQUE A REEMPLAZAR ==================
            success: function(response) {
                // Esta función se ejecuta si el servidor responde con un código de éxito (ej: 200 OK)

                if(response.success) {
                    // El servidor nos dijo que la operación fue exitosa

                    // 1. Mostramos el mensaje de éxito al usuario
                    divMensaje.html('<div class="alert alert-success mt-3">¡Cambios guardados correctamente!</div>');

                    // 2. Actualizamos el contador con el nuevo total que nos envió el servidor
                    $('#total-citas-badge').text(response.nuevoTotalCitas);

                } else {
                    // El servidor nos dijo que algo falló (un error controlado, ej: datos inválidos)
                    divMensaje.html('<div class="alert alert-danger mt-3">' + response.message + '</div>');
                }
            },
            error: function() {
                // Esta función se ejecuta si hay un error de red o el servidor responde con un error no controlado (ej: 500 Internal Server Error)
                divMensaje.html('<div class="alert alert-danger mt-3">Error de conexión. No se pudieron guardar los cambios.</div>');
            },
            complete: function() {
                // Esta función se ejecuta siempre, tanto en éxito como en error, una vez que la llamada termina.
                // La usamos para volver a habilitar el botón.
                boton.prop('disabled', false).text('Guardar Cambios');
            }
            // =================== FIN DEL BLOQUE A REEMPLAZAR ====================
        });

        // ... aquí termina el evento de click ...
            });
        });
    </script>
}